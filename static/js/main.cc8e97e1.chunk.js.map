{"version":3,"sources":["survey-form.jsx","google-maps.js","validation-form.jsx","App.js","serviceWorker.js","index.js"],"names":["Geocode","setApiKey","setLanguage","SurveyForm","props","handleChangeFirstName","e","target","value","maxLength","message","slice","setState","firstName","handleChangeLastName","lastName","handleChangeDateOfBirth","dateOfBirth","handleChangeFeet","foot","handleChangeInches","inch","handleChangeEducation","education","handleChangeAddress1","street","handleChangeAddress2","street2","handleChangeCity","city","handleChangeState","state","handleChangeZipCode","zip","handleChangeEmail","email","handleChangeEmailConfirmation","emailConfirmation","handleChangeCaptcha","console","log","captchaInvalidFlag","captchaValue","handleSubmit","preventDefault","form","validateLocation","validEmailConfirmation","onSubmit","validDateOfBirth","validAddress","today","Date","month","getMonth","day","getDate","year","getFullYear","toString","fullAddress","this","fromAddress","then","response","error","invalidField","className","id","type","placeholder","onChange","required","htmlFor","max","todaysDate","min","defaultValue","address","address2","minLength","aria-describedby","href","sitekey","Component","GoogleMaps","mapStyles","width","height","mapHeight","googleMapRef","React","createRef","googleMap","useRef","marker","useEffect","googleMapScript","document","createElement","src","window","body","appendChild","addEventListener","current","google","maps","Map","zoom","center","lat","lng","Marker","position","map","ref","style","ValidationForm","loadFormData","setMapHeight","lon","retrieveLocationCoordinates","results","geometry","location","titleHeight","getElementById","clientHeight","innerHeight","date","fullDate","replace","toDateString","length","Number","isInteger","parseInt","dateToString","onClick","resetForm","App","formSubmitted","handleReset","handleReceivedForm","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cc8e97e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\n// set Google Maps Geocoding API for purposes of quota management. Optional, but recommended.\r\nGeocode.setApiKey(\"AIzaSyCQldl1eVtGg5Y6OgjJ8_sZITLWmY7WEH0\");\r\n\r\n// set response Language. Defaults to English.\r\nGeocode.setLanguage(\"en\");\r\n\r\nclass SurveyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      dateOfBirth: \"\",\r\n      foot: \"\",\r\n      inch: \"\",\r\n      education: \"\",\r\n      street: \"\",\r\n      street2: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      email: \"\",\r\n      emailConfirmation: \"\",\r\n      captchaValue: \"\",\r\n      captchaInvalidFlag: false,\r\n      validDateOfBirth: true,\r\n      validAddress: true,\r\n      validEmailConfirmation: true,\r\n    };\r\n  }\r\n\r\n  todaysDate() {\r\n    var today = new Date();\r\n    var month = today.getMonth() + 1;\r\n    var day = today.getDate();\r\n    var year = today.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month.toString();\r\n    if (day < 10) day = \"0\" + day.toString();\r\n\r\n    var maxDate = year + \"-\" + month + \"-\" + day;\r\n    return maxDate;\r\n  }\r\n\r\n  // Confirms if coordinates are available from the inputted addr\r\n  validateLocation() {\r\n    var fullAddress =\r\n      this.state.street +\r\n      \" \" +\r\n      this.state.street2 +\r\n      \" \" +\r\n      this.state.city +\r\n      \" \" +\r\n      this.state.state +\r\n      \" \" +\r\n      this.state.zip;\r\n\r\n    Geocode.fromAddress(fullAddress).then(\r\n      (response) => {\r\n        this.setState({\r\n          validAddress: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        this.setState({\r\n          validAddress: false,\r\n        });\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const invalidField = \"text-danger bold\";\r\n\r\n    return (\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"text-center p-1 bg-info\">\r\n          <h4>CSC 642 Summer 2020 Individual Assignment: John Le</h4>\r\n        </div>\r\n        <form\r\n          id=\"survey-form-container\"\r\n          onSubmit={this.handleSubmit}\r\n          className=\"p-4\"\r\n        >\r\n          <p className=\"text-center display-4\">Data Survey Form</p>\r\n          <div className=\"form-group\">\r\n            <label>Name*</label>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"firstName\"\r\n                  placeholder=\"First name\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleChangeFirstName}\r\n                  maxLength=\"40\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"lastName\"\r\n                  placeholder=\"Last name\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.handleChangeLastName}\r\n                  maxLength=\"40\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"dateOfBirth\">Date of Birth*</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                id=\"dateOfBirth\"\r\n                value={this.state.dateOfBirth}\r\n                onChange={this.handleChangeDateOfBirth}\r\n                max={this.todaysDate()}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-3\">\r\n              <label>Height</label>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"foot\"\r\n                    placeholder=\"feet\"\r\n                    value={this.state.foot}\r\n                    onChange={this.handleChangeFeet}\r\n                    min=\"0\"\r\n                    max=\"9\"\r\n                    maxLength=\"2\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"inch\"\r\n                    placeholder=\"inches\"\r\n                    value={this.state.inch}\r\n                    onChange={this.handleChangeInches}\r\n                    min=\"0\"\r\n                    max=\"11\"\r\n                    maxLength=\"2\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-6\">\r\n              <label htmlFor=\"educationLevel\">Education Level</label>\r\n              <select\r\n                id=\"educationLevel\"\r\n                className=\"form-control\"\r\n                defaultValue=\"n/a\"\r\n                onChange={this.handleChangeEducation}\r\n              >\r\n                <option value=\"n/a\">Choose...</option>\r\n                <option value=\"High School\">High School</option>\r\n                <option value=\"College\">College</option>\r\n                <option value=\"Graduate Studies\">Graduate Studies</option>\r\n                <option value=\"Ph.D\">Ph.D</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"form-group\">\r\n            {this.state.validAddress ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <small className={invalidField}>\r\n                  <b>\r\n                    Invalid Address: Please double-check the spelling and try\r\n                    again.\r\n                  </b>\r\n                </small>\r\n                <br />\r\n              </div>\r\n            )}\r\n            <label\r\n              htmlFor=\"inputAddress\"\r\n              className={this.state.validAddress ? \"\" : invalidField}\r\n            >\r\n              Address*\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"inputAddress\"\r\n              placeholder=\"1234 Main St\"\r\n              value={this.state.address}\r\n              onChange={this.handleChangeAddress1}\r\n              maxLength=\"40\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <label\r\n                htmlFor=\"inputAddress2\"\r\n                className={this.state.validAddress ? \"\" : invalidField}\r\n              >\r\n                Address 2\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"inputAddress2\"\r\n                placeholder=\"Apartment, studio, or floor\"\r\n                value={this.state.address2}\r\n                onChange={this.handleChangeAddress2}\r\n                maxLength=\"15\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-7\">\r\n              <label\r\n                htmlFor=\"inputCity\"\r\n                className={this.state.validAddress ? \"\" : invalidField}\r\n              >\r\n                City*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"inputCity\"\r\n                value={this.state.city}\r\n                onChange={this.handleChangeCity}\r\n                maxLength=\"40\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-1\">\r\n              <label\r\n                htmlFor=\"inputState\"\r\n                className={this.state.validAddress ? \"\" : invalidField}\r\n              >\r\n                State*\r\n              </label>\r\n              <select\r\n                id=\"inputState\"\r\n                className=\"form-control\"\r\n                value={this.state.state}\r\n                onChange={this.handleChangeState}\r\n                required\r\n              >\r\n                <option defaultValue=\"n/a\">Choose...</option>\r\n                <option value=\"AL\">AL</option>\r\n                <option value=\"AK\">AK</option>\r\n                <option value=\"AR\">AR</option>\r\n                <option value=\"AZ\">AZ</option>\r\n                <option value=\"CA\">CA</option>\r\n                <option value=\"CO\">CO</option>\r\n                <option value=\"CT\">CT</option>\r\n                <option value=\"DC\">DC</option>\r\n                <option value=\"DE\">DE</option>\r\n                <option value=\"FL\">FL</option>\r\n                <option value=\"GA\">GA</option>\r\n                <option value=\"HI\">HI</option>\r\n                <option value=\"IA\">IA</option>\r\n                <option value=\"ID\">ID</option>\r\n                <option value=\"IL\">IL</option>\r\n                <option value=\"IN\">IN</option>\r\n                <option value=\"KS\">KS</option>\r\n                <option value=\"KY\">KY</option>\r\n                <option value=\"LA\">LA</option>\r\n                <option value=\"MA\">MA</option>\r\n                <option value=\"MD\">MD</option>\r\n                <option value=\"ME\">ME</option>\r\n                <option value=\"MI\">MI</option>\r\n                <option value=\"MN\">MN</option>\r\n                <option value=\"MO\">MO</option>\r\n                <option value=\"MS\">MS</option>\r\n                <option value=\"MT\">MT</option>\r\n                <option value=\"NC\">NC</option>\r\n                <option value=\"NE\">NE</option>\r\n                <option value=\"NH\">NH</option>\r\n                <option value=\"NJ\">NJ</option>\r\n                <option value=\"NM\">NM</option>\r\n                <option value=\"NV\">NV</option>\r\n                <option value=\"NY\">NY</option>\r\n                <option value=\"ND\">ND</option>\r\n                <option value=\"OH\">OH</option>\r\n                <option value=\"OK\">OK</option>\r\n                <option value=\"OR\">OR</option>\r\n                <option value=\"PA\">PA</option>\r\n                <option value=\"RI\">RI</option>\r\n                <option value=\"SC\">SC</option>\r\n                <option value=\"SD\">SD</option>\r\n                <option value=\"TN\">TN</option>\r\n                <option value=\"TX\">TX</option>\r\n                <option value=\"UT\">UT</option>\r\n                <option value=\"VT\">VT</option>\r\n                <option value=\"VA\">VA</option>\r\n                <option value=\"WA\">WA</option>\r\n                <option value=\"WI\">WI</option>\r\n                <option value=\"WV\">WV</option>\r\n                <option value=\"WY\">WY</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-md-2\">\r\n              <label\r\n                htmlFor=\"inputZip\"\r\n                className={this.state.validAddress ? \"\" : invalidField}\r\n              >\r\n                Zip*\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"inputZip\"\r\n                value={this.state.zip}\r\n                onChange={this.handleChangeZipCode}\r\n                minLength=\"5\"\r\n                maxLength=\"5\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"form-group\">\r\n            {this.state.validEmailConfirmation ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <small className={invalidField}>\r\n                  <b>\r\n                    Invalid Email Confirmation: Please double-check the spelling\r\n                    and try again.\r\n                  </b>\r\n                </small>\r\n                <br />\r\n              </div>\r\n            )}\r\n            <label\r\n              htmlFor=\"email\"\r\n              className={this.state.validEmailConfirmation ? \"\" : invalidField}\r\n            >\r\n              Email*\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChangeEmail}\r\n              maxLength=\"40\"\r\n              required\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group pb-4\">\r\n            <label\r\n              htmlFor=\"emailConfirmation\"\r\n              className={this.state.validEmailConfirmation ? \"\" : invalidField}\r\n            >\r\n              Confirm Email*\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"emailConfirmation\"\r\n              placeholder=\"Re-enter Email\"\r\n              aria-describedby=\"errorConfirmingEmail\"\r\n              value={this.state.emailConfirmation}\r\n              onChange={this.handleChangeEmailConfirmation}\r\n              maxLength=\"40\"\r\n              required\r\n            />\r\n            {this.state.validEmailConfirmation ? (\r\n              \"\"\r\n            ) : (\r\n              <small\r\n                id=\"errorConfirmingEmail\"\r\n                className=\"form-text text-danger\"\r\n              >\r\n                Your email and confirmed email does not match.\r\n              </small>\r\n            )}\r\n          </div>\r\n          <div className=\"my-4\">\r\n            <div className=\"form-group\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"agreeCheck\"\r\n                  required\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"agreeCheck\">\r\n                  I agree with the <a href=\"_blank\">Terms and Conditions</a>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {!this.state.captchaInvalidFlag ? (\r\n              \"\"\r\n            ) : (\r\n              <div>\r\n                <small className={invalidField}>\r\n                  <b>Captcha Error: Try Again</b>\r\n                </small>\r\n                <br />\r\n              </div>\r\n            )}\r\n            <ReCAPTCHA\r\n              sitekey=\"6Ld0ZrIZAAAAAEbcZZPxtxtYXZoOxbsOpnKfbd1C\"\r\n              onChange={this.handleChangeCaptcha}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary my-4\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /* MARK: Input Change Handlers */\r\n  handleChangeFirstName = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      firstName: message,\r\n    });\r\n  };\r\n\r\n  handleChangeLastName = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      lastName: message,\r\n    });\r\n  };\r\n\r\n  handleChangeDateOfBirth = (e) => {\r\n    const { value } = e.target;\r\n\r\n    this.setState({\r\n      dateOfBirth: value,\r\n    });\r\n  };\r\n\r\n  handleChangeFeet = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      foot: message,\r\n    });\r\n  };\r\n\r\n  handleChangeInches = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      inch: message,\r\n    });\r\n  };\r\n\r\n  handleChangeEducation = (e) => {\r\n    const { value } = e.target;\r\n\r\n    this.setState({\r\n      education: value,\r\n    });\r\n  };\r\n\r\n  handleChangeAddress1 = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      street: message,\r\n    });\r\n  };\r\n\r\n  handleChangeAddress2 = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      street2: message,\r\n    });\r\n  };\r\n\r\n  handleChangeCity = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      city: message,\r\n    });\r\n  };\r\n\r\n  handleChangeState = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      state: message,\r\n    });\r\n  };\r\n\r\n  handleChangeZipCode = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      zip: message,\r\n    });\r\n  };\r\n\r\n  handleChangeEmail = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      email: message,\r\n    });\r\n  };\r\n\r\n  handleChangeEmailConfirmation = (e) => {\r\n    const { value, maxLength } = e.target;\r\n    const message = value.slice(0, maxLength);\r\n\r\n    this.setState({\r\n      emailConfirmation: message,\r\n    });\r\n  };\r\n\r\n  handleChangeCaptcha = (value) => {\r\n    console.log(\"captcha value\", value);\r\n    this.setState({\r\n      captchaInvalidFlag: false,\r\n      captchaValue: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    var { email, emailConfirmation, captchaValue } = this.state;\r\n\r\n    var form;\r\n\r\n    this.validateLocation();\r\n\r\n    // Confirm that emails match\r\n    if (email !== emailConfirmation) {\r\n      console.log(\"emails dont match\");\r\n      this.setState({\r\n        validEmailConfirmation: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (captchaValue !== \"\") {\r\n      // Create valid form\r\n      form = {\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        dateOfBirth: this.state.dateOfBirth,\r\n        foot: this.state.foot,\r\n        inch: this.state.inch,\r\n        education: this.state.education,\r\n        street: this.state.street,\r\n        street2: this.state.street2,\r\n        city: this.state.street2,\r\n        state: this.state.state,\r\n        zip: this.state.zip,\r\n        email: this.state.email,\r\n      };\r\n\r\n      // Send form to Validation page\r\n      this.props.onSubmit(e, form);\r\n    } else {\r\n      this.setState({\r\n        captchaInvalidFlag: true,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport default SurveyForm;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\n// Variables\r\nconst GOOGLE_MAP_API_KEY = \"AIzaSyCQldl1eVtGg5Y6OgjJ8_sZITLWmY7WEH0\";\r\n\r\nfunction GoogleMaps(props) {\r\n  // styles\r\n  const mapStyles = {\r\n    width: \"100%\",\r\n    height: props.mapHeight,\r\n  };\r\n\r\n  // refs\r\n  const googleMapRef = React.createRef();\r\n  const googleMap = useRef(null);\r\n  const marker = useRef(null);\r\n\r\n  // helper functions\r\n  const createGoogleMap = () =>\r\n    new window.google.maps.Map(googleMapRef.current, {\r\n      zoom: 15,\r\n      center: {\r\n        lat: props.lat,\r\n        lng: props.lng,\r\n      },\r\n    });\r\n\r\n  const createMarker = () =>\r\n    new window.google.maps.Marker({\r\n      position: { lat: props.lat, lng: props.lng },\r\n      map: googleMap.current,\r\n    });\r\n\r\n  // useEffect Hook\r\n  useEffect(() => {\r\n    const googleMapScript = document.createElement(\"script\");\r\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}&libraries=places`;\r\n    window.document.body.appendChild(googleMapScript);\r\n\r\n    googleMapScript.addEventListener(\"load\", () => {\r\n      googleMap.current = createGoogleMap();\r\n      marker.current = createMarker();\r\n    });\r\n  });\r\n\r\n  return <div id=\"google-map\" ref={googleMapRef} style={mapStyles} />;\r\n}\r\n\r\nexport default GoogleMaps;\r\n","import React, { Component } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\nimport GoogleMaps from \"./google-maps\";\r\n\r\n// set Google Maps Geocoding API for purposes of quota management. Optional, but recommended.\r\nGeocode.setApiKey(\"AIzaSyCQldl1eVtGg5Y6OgjJ8_sZITLWmY7WEH0\");\r\n\r\n// set response Language. Defaults to English.\r\nGeocode.setLanguage(\"en\");\r\n\r\nclass ValidationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      dateOfBirth: \"\",\r\n      foot: \"\",\r\n      inch: \"\",\r\n      education: \"\",\r\n      street: \"\",\r\n      street2: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      fullAddress: \"\",\r\n      email: \"\",\r\n      lat: \"\",\r\n      lng: \"\",\r\n      mapHeight: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadFormData();\r\n    this.setMapHeight();\r\n  }\r\n\r\n  /*\r\n    Loads survey inputs into validation page\r\n  */\r\n  async loadFormData() {\r\n    await this.setState({\r\n      firstName: this.props.form.firstName,\r\n      lastName: this.props.form.lastName,\r\n      dateOfBirth: this.props.form.dateOfBirth,\r\n      foot: this.props.form.foot,\r\n      inch: this.props.form.inch,\r\n      education: this.props.form.education,\r\n      street: this.props.form.street,\r\n      street2: this.props.form.street2,\r\n      city: this.props.form.city,\r\n      state: this.props.form.state,\r\n      zip: this.props.form.zip,\r\n      fullAddress:\r\n        this.props.form.street +\r\n        \" \" +\r\n        this.props.form.street2 +\r\n        \" \" +\r\n        this.props.form.city +\r\n        \" \" +\r\n        this.props.form.state +\r\n        \" \" +\r\n        this.props.form.zip,\r\n      email: this.props.form.email,\r\n      lat: \"\",\r\n      lon: \"\",\r\n    });\r\n    this.retrieveLocationCoordinates();\r\n  }\r\n\r\n  /* \r\n    Retrieves the geocodes from the full address.\r\n  */\r\n  retrieveLocationCoordinates() {\r\n    Geocode.fromAddress(this.state.fullAddress).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        this.setState({\r\n          lat,\r\n          lng,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    Required Height parameter for Google Maps\r\n  */\r\n  setMapHeight() {\r\n    const titleHeight = document.getElementById(\"title-container\").clientHeight;\r\n    const mapHeight = window.innerHeight - titleHeight;\r\n\r\n    this.setState({\r\n      mapHeight,\r\n    });\r\n  }\r\n\r\n  /* \r\n    Converts YYYY-MM-DD to Month DD YYYY\r\n  */\r\n  dateToString(date) {\r\n    var fullDate = new Date(date.replace(\"-\", \"/\"));\r\n    fullDate = fullDate.toDateString().slice(4, fullDate.toDateString().length);\r\n    return fullDate;\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      firstName,\r\n      lastName,\r\n      dateOfBirth,\r\n      foot,\r\n      inch,\r\n      education,\r\n      street,\r\n      street2,\r\n      city,\r\n      state,\r\n      zip,\r\n      email,\r\n      lat,\r\n      lng,\r\n      mapHeight,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div id=\"page-container\" className=\"d-flex flex-column\">\r\n        <div id=\"title-container\" className=\"text-center w-100 bg-info\">\r\n          <h2>Results Verification Page: John Le</h2>\r\n        </div>\r\n        <div className=\"d-flex w-100\">\r\n          <div className=\"d-flex flex-column justify-content-between text-center\">\r\n            {/* MARK: Left Panel: User Information */}\r\n            <div>\r\n              <span className=\"d-inline-block display-4 m-4\">\r\n                <u>\r\n                  {firstName} {lastName}\r\n                </u>\r\n              </span>\r\n              <b>Address:</b>\r\n              <p>\r\n                {street} {Number.isInteger(parseInt(street2)) ? \"#\" : \"\"}{\" \"}\r\n                {street2}\r\n                <br /> {city} {state} {zip}\r\n              </p>\r\n              <b>Email: </b>\r\n              <p>{email}</p>\r\n              <b>Date of Birth: </b>\r\n              <p>{this.dateToString(dateOfBirth)}</p>\r\n              <b>Height: </b>\r\n              <p>\r\n                {foot > 0 ? `${foot} ft.` : \"\"} {inch > 0 ? `${inch} in.` : \"\"}\r\n              </p>\r\n              <b>Education Level:</b>\r\n              <p>{education}</p>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-primary mb-4\"\r\n                onClick={this.props.resetForm}\r\n              >\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* MARK: Right Panel: Google Maps */}\r\n          <div\r\n            id=\"map-container\"\r\n            className=\"d-flex flex-column text-center w-100\"\r\n          >\r\n            <GoogleMaps\r\n              lat={lat}\r\n              lng={lng}\r\n              mapHeight={mapHeight}\r\n              className=\"border border-success\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ValidationForm;\r\n","import React, { Component } from \"react\";\r\nimport SurveyForm from \"./survey-form\";\r\nimport ValidationForm from \"./validation-form\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formSubmitted: false,\r\n      form: null,\r\n    };\r\n  }\r\n\r\n  /* perform this when a survey form is submitted */\r\n  handleReceivedForm(e, form) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      formSubmitted: true,\r\n      form: form,\r\n    });\r\n  }\r\n\r\n  /* perform this when the user would like to \"try again\". */\r\n  handleReset(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      formSubmitted: false,\r\n      form: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { formSubmitted } = this.state;\r\n    return (\r\n      <div className=\"App bg-light\">\r\n        {formSubmitted ? (\r\n          <ValidationForm\r\n            form={this.state.form}\r\n            resetForm={(e) => this.handleReset(e)}\r\n          />\r\n        ) : (\r\n          <SurveyForm\r\n            onSubmit={(e, form) => this.handleReceivedForm(e, form)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}